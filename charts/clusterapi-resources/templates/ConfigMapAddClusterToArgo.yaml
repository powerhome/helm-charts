{{- if .Values.argo.enabled }}
apiVersion: v1
kind: ConfigMap
metadata:
  name: add-cluster-to-argo
  namespace: {{ .Release.Namespace }}
data:
  data: |-
    ---
    apiVersion: v1
    kind: Pod
    metadata:
      name: initial-cluster-setup
      namespace: argo
      labels:
        app: alpine
    spec:
      restartPolicy: OnFailure
      serviceAccountName: argo-manager
      containers:
      - name: alpine
        image: alpine:3.21.2
        resources:
          requests:
            memory: 128Mi
          limits:
            cpu: 300m
            memory: 128Mi
        env:
        - name: ARGOCD_AUTH_TOKEN
          valueFrom:
            secretKeyRef:
              name: argo-auth-token
              key: token
        command:
        - "sh"
        args:
        - "-c"
        - |-
          apk add --no-cache curl

          # install argocd cli
          curl -sSLo /usr/local/bin/argocd https://github.com/argoproj/argo-cd/releases/download/v{{ .Values.argo.version }}/argocd-linux-amd64
          chmod +x /usr/local/bin/argocd

          # generate a kubeconfig for current cluster
          KUBERNETES_CONTEXT="inCluster"
          SERVICE_ACCOUNT_DIR="/var/run/secrets/kubernetes.io/serviceaccount"
          KUBERNETES_SERVICE_SCHEME=$(case $KUBERNETES_SERVICE_PORT in 80|8080|8081) echo "http";; *) echo "https"; esac)
          KUBERNETES_SERVER_URL="$KUBERNETES_SERVICE_SCHEME"://"$KUBERNETES_SERVICE_HOST":"$KUBERNETES_SERVICE_PORT"
          KUBERNETES_CLUSTER_CA_FILE="$SERVICE_ACCOUNT_DIR"/ca.crt
          KUBERNETES_NAMESPACE=$(cat "$SERVICE_ACCOUNT_DIR"/namespace)
          KUBERNETES_USER_TOKEN=$(cat "$SERVICE_ACCOUNT_DIR"/token)
          mkdir -p "$HOME"/.kube

          cat > "$HOME"/.kube/config <<EOF
          apiVersion: v1
          kind: Config
          preferences: {}
          current-context: $KUBERNETES_CONTEXT
          clusters:
          - cluster:
              server: $KUBERNETES_SERVER_URL
              certificate-authority: $KUBERNETES_CLUSTER_CA_FILE
            name: $KUBERNETES_CONTEXT
          users:
          - name: podServiceAccount
            user:
              token: $KUBERNETES_USER_TOKEN
          contexts:
          - context:
              cluster: $KUBERNETES_CONTEXT
              user: podServiceAccount
              namespace: $KUBERNETES_NAMESPACE
            name: $KUBERNETES_CONTEXT
          EOF

          # add cluster to argo
          {{- $argoLabels := "" }}
          {{- range $key, $value := .Values.argo.labels }}
            {{- $argoLabels = printf "%s --label %s=%s" $argoLabels $key $value }}
          {{- end }}

          argocd --server {{ .Values.argo.url }} \
                 --auth-token $ARGOCD_AUTH_TOKEN \
                 --grpc-web cluster add $KUBERNETES_CONTEXT \
                 --name {{ .Values.cluster.name }} \
                 --cluster-endpoint kube-public \
                 {{- if .Values.argo.labels }}
                 {{ $argoLabels }} \
                 {{- end }}
                 --yes

{{- end }}
