{{- if .Values.argo.enabled }}
apiVersion: v1
kind: ConfigMap
metadata:
  name: add-cluster-to-argo
  namespace: {{ .Release.Namespace }}
data:
  data: |-
    {{- if .Values.argo.serviceAccount.create }}
    ---
    apiVersion: v1
    kind: ServiceAccount
    metadata:
      name: {{ .Values.argo.serviceAccount.name }}
      namespace: {{ .Values.argo.namespace }}
    ---
    apiVersion: rbac.authorization.k8s.io/v1
    kind: ClusterRoleBinding
    metadata:
      name: {{ .Values.argo.serviceAccount.name }}-binding
    roleRef:
      apiGroup: rbac.authorization.k8s.io
      kind: ClusterRole
      name: cluster-admin
    subjects:
    - kind: ServiceAccount
      name: {{ .Values.argo.serviceAccount.name }}
      namespace: {{ .Values.argo.namespace }}
    {{- end }}
    ---
    apiVersion: v1
    kind: Pod
    metadata:
      name: initial-cluster-setup
      namespace: {{ .Values.argo.namespace }}
      labels:
        app: alpine
    spec:
      restartPolicy: OnFailure
      serviceAccountName: {{ .Values.argo.serviceAccount.name }}
      containers:
      - name: alpine
        image: alpine:3.21.2
        resources:
          requests:
            memory: 128Mi
          limits:
            cpu: 300m
            memory: 128Mi
        env:
        - name: ARGOCD_AUTH_TOKEN
          valueFrom:
            secretKeyRef:
              name: argo-auth-token
              key: token
        command:
        - "sh"
        args:
        - "-c"
        - |-
          apk add --no-cache curl

          # install ArgoCD cli
          curl -sSLo /usr/local/bin/argocd https://github.com/argoproj/argo-cd/releases/download/v{{ .Values.argo.version }}/argocd-linux-amd64
          chmod +x /usr/local/bin/argocd

          # generate labels to be added to the cluster at ArgoCD
          {{- $argoLabels := "" }}
          {{- range $key, $value := .Values.argo.labels }}
            {{- $argoLabels = printf "%s --label %s=%s" $argoLabels $key $value }}
          {{- end }}

          # add cluster to ArgoCD
          argocd --server {{ .Values.argo.url }} \
                 --auth-token $ARGOCD_AUTH_TOKEN \
                 --grpc-web cluster add $KUBERNETES_CONTEXT \
                 --name {{ .Values.cluster.name }} \
                 --cluster-endpoint kube-public \
                 {{- if .Values.argo.labels }}
                 {{ $argoLabels }} \
                 {{- end }}
                 --yes

{{- end }}
